{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import io from'socket.io-client';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io(process.env.REACT_APP_API_URL||'http://localhost:5000');function App(){const[username,setUsername]=useState('');const[loggedInUser,setLoggedInUser]=useState(null);const[users,setUsers]=useState([]);const[messages,setMessages]=useState([]);const[messageInput,setMessageInput]=useState('');const messagesEndRef=useRef(null);useEffect(()=>{fetchUsers();fetchMessages();socket.on('newMessage',message=>{setMessages(prev=>[...prev,message]);});return()=>{socket.off('newMessage');};},[]);useEffect(()=>{scrollToBottom();},[messages]);const fetchUsers=async()=>{try{const res=await fetch('/api/users');const data=await res.json();setUsers(data);}catch(err){console.error('Failed to fetch users',err);}};const fetchMessages=async()=>{try{const res=await fetch('/api/messages');const data=await res.json();setMessages(data);}catch(err){console.error('Failed to fetch messages',err);}};const handleLogin=async()=>{if(!username.trim())return;try{const res=await fetch('/api/users',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username})});if(res.ok){const user=await res.json();setLoggedInUser(user);setUsername('');fetchUsers();}else{const error=await res.json();alert(error.error||'Login failed');}}catch(err){console.error('Login error',err);}};const handleSendMessage=()=>{if(!messageInput.trim()||!loggedInUser)return;socket.emit('sendMessage',{senderId:loggedInUser._id,content:messageInput});setMessageInput('');};const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};if(!loggedInUser){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login\"})]});}return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:600,margin:'20px auto',padding:20,border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chat App\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Logged in as:\"}),\" \",loggedInUser.username]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',marginTop:10},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,marginRight:10},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Users\"}),/*#__PURE__*/_jsx(\"ul\",{children:users.map(user=>/*#__PURE__*/_jsx(\"li\",{children:user.username},user._id))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:3,display:'flex',flexDirection:'column',height:400,border:'1px solid #ddd',padding:10},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,overflowY:'auto',marginBottom:10},children:[messages.map(msg=>{var _msg$sender;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:5},children:[/*#__PURE__*/_jsxs(\"strong\",{children:[((_msg$sender=msg.sender)===null||_msg$sender===void 0?void 0:_msg$sender.username)||'Unknown',\":\"]}),\" \",msg.content]},msg._id);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:messageInput,onChange:e=>setMessageInput(e.target.value),onKeyDown:e=>e.key==='Enter'&&handleSendMessage(),style:{flex:1,marginRight:10},placeholder:\"Type a message\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:\"Send\"})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsx","_jsx","jsxs","_jsxs","socket","process","env","REACT_APP_API_URL","App","username","setUsername","loggedInUser","setLoggedInUser","users","setUsers","messages","setMessages","messageInput","setMessageInput","messagesEndRef","fetchUsers","fetchMessages","on","message","prev","off","scrollToBottom","res","fetch","data","json","err","console","error","handleLogin","trim","method","headers","body","JSON","stringify","ok","user","alert","handleSendMessage","emit","senderId","_id","content","_messagesEndRef$curre","current","scrollIntoView","behavior","style","padding","children","type","placeholder","value","onChange","e","target","onClick","maxWidth","margin","border","display","marginTop","flex","marginRight","map","flexDirection","height","overflowY","marginBottom","msg","_msg$sender","sender","ref","onKeyDown","key"],"sources":["C:/Users/mbitu/week-7-devops-deployment-assignment-mbitujames/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    fetchMessages();\r\n\r\n    socket.on('newMessage', (message) => {\r\n      setMessages((prev) => [...prev, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newMessage');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await fetch('/api/users');\r\n      const data = await res.json();\r\n      setUsers(data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch users', err);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await fetch('/api/messages');\r\n      const data = await res.json();\r\n      setMessages(data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch messages', err);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!username.trim()) return;\r\n    try {\r\n      const res = await fetch('/api/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      if (res.ok) {\r\n        const user = await res.json();\r\n        setLoggedInUser(user);\r\n        setUsername('');\r\n        fetchUsers();\r\n      } else {\r\n        const error = await res.json();\r\n        alert(error.error || 'Login failed');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error', err);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!messageInput.trim() || !loggedInUser) return;\r\n    socket.emit('sendMessage', { senderId: loggedInUser._id, content: messageInput });\r\n    setMessageInput('');\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  if (!loggedInUser) {\r\n    return (\r\n      <div style={{ padding: 20 }}>\r\n        <h2>Login</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <button onClick={handleLogin}>Login</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: '20px auto', padding: 20, border: '1px solid #ccc' }}>\r\n      <h2>Chat App</h2>\r\n      <div>\r\n        <strong>Logged in as:</strong> {loggedInUser.username}\r\n      </div>\r\n      <div style={{ display: 'flex', marginTop: 10 }}>\r\n        <div style={{ flex: 1, marginRight: 10 }}>\r\n          <h3>Users</h3>\r\n          <ul>\r\n            {users.map((user) => (\r\n              <li key={user._id}>{user.username}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div style={{ flex: 3, display: 'flex', flexDirection: 'column', height: 400, border: '1px solid #ddd', padding: 10 }}>\r\n          <div style={{ flex: 1, overflowY: 'auto', marginBottom: 10 }}>\r\n            {messages.map((msg) => (\r\n              <div key={msg._id} style={{ marginBottom: 5 }}>\r\n                <strong>{msg.sender?.username || 'Unknown'}:</strong> {msg.content}\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          <div style={{ display: 'flex' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={messageInput}\r\n              onChange={(e) => setMessageInput(e.target.value)}\r\n              onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\r\n              style={{ flex: 1, marginRight: 10 }}\r\n              placeholder=\"Type a message\"\r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}